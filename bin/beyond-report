#!/usr/bin/env node

'use strict';

process.env.NODE_TLS_REJECT_UNAUTHORIZED = "0";

let CLIConfig     = require('../lib/config');
let login         = require('../lib/login');
let program       = require('commander');
let Report        = require('../lib/report/report');
let Downloader    = require('../lib/report/downloader');

program
  .option('-c, --customer', 'Run against a customer account. Defaults to developer.')
  .option('-a, --account [value]', 'Use the given account ID as the default account to load. (Typically used together with the -c and -e options)')
  .option('-i, --imp [value]', 'Use your credentials to impersonate a user')
  .option('-k, --key [value]', 'Path to a secure file where credentials are stored in the format username:password.')
  .option('-e, --env [value]', 'The API environment to use. Defaults to production. Options: dev, staging, prod.')
  .option('-p, --params <value>', 'Custom path to the JSON file with parameters, otherwise looks for the file next to the report')
  .option('--debug', 'Attach node debugger')
  .option('--export <filename>', 'Export result to CSV file')
  .option('--download', 'Get all reports from the platform')
  .parse(process.argv);

try {

  let config = new CLIConfig(program);

  login(config)
    .then((loggedIn) => {

      if (loggedIn) {

        let report;

        if (program.download) {
          report = new Downloader(config);
        } else {
          report = new Report(config);
        }

        report.run();

      }

    });

} catch (error) {

  handleError(error);
  return false;

}

process.on('unhandledRejection', handleError);

function handleError(error) {

  console.error(error.stack || error);

}
